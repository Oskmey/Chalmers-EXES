# package exercises

# Pig Latin, silly secret language
# https://en.wikipedia.org/wiki/Pig_Latin
#
# See:
# - UseString
def pig_latin_program():
    str_to_translate = input("Text to translate? >")
    str_to_translate = str_to_translate
    to_pig_latin(str_to_translate, constants_list)


constants_list = ["b", "c", "d", "f", "g", "h", "j", "k", "l", "m", "n", "p", "q", "r", "s", "t", "v", "w", "x",
                  "z", "å", "ä", "ö"]


# ---------- Methods --------------------
# T
def to_pig_latin(str_to_translate, constants_list):
    get_first_letter_action(str_to_translate, constants_list)


def get_first_letter_action(str_to_translate, constants_list):
    str_without_begining_spaces = str_to_translate.strip()
    words = str_without_begining_spaces.split()
    for i in range(len(words)):
        the_word = words[i]
        reached_vowel = False
        start_vowel = False
        list_of_constants = []
        new_latin_word = []
        for letter in the_word:
            if letter.lower() not in constants_list:
                reached_vowel = True
                if letter == the_word[0]:
                  start_vowel = True
            if not reached_vowel:
                list_of_constants.append(letter)
            else:
                new_latin_word.append(letter)
        if not start_vowel:
            pig_latin_word = new_latin_word + list_of_constants + ["ay"]
            pig_latin_word = "".join(pig_latin_word)
        else:
            pig_latin_word = the_word + "way"
        print(pig_latin_word, end=" ")


def test():
    print(to_pig_latin("My name is Eric") == "yMay amenay isway Ericway")


if __name__ == "__main__":
    pig_latin_program()
